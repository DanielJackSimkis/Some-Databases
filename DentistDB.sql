-- Generated by Oracle SQL Developer Data Modeler 4.1.3.901
--   at:        2016-11-15 16:09:42 GMT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

CREATE
  TABLE Appointment
  (
    Appointment_ID      INTEGER NOT NULL ,
    "Date&Time"         DATE NOT NULL ,
    Appointment_Type    VARCHAR2 (30 CHAR) NOT NULL ,
    "Follow-Up_Date"    DATE ,
    Staff_Staff_ID      INTEGER NOT NULL ,
    Patients_Patient_ID INTEGER NOT NULL ,
    Room_Room_ID        NUMBER NOT NULL
  ) ;
ALTER TABLE Appointment ADD CONSTRAINT Appointment_PK PRIMARY KEY (
Appointment_ID ) ;


CREATE
  TABLE Medical_Notes
  (
    Note_ID             INTEGER NOT NULL ,
    Note_Title          VARCHAR2 (30 CHAR) NOT NULL ,
    Note_Description    VARCHAR2 (100 CHAR) NOT NULL ,
    Patients_Patient_ID INTEGER NOT NULL
  ) ;
ALTER TABLE Medical_Notes ADD CONSTRAINT Medical_Notes_PK PRIMARY KEY ( Note_ID
) ;


CREATE
  TABLE Patients
  (
    Patient_ID          INTEGER NOT NULL ,
    First_Name          VARCHAR2 (30 CHAR) NOT NULL ,
    SurName             VARCHAR2 (30 CHAR) NOT NULL ,
    Telephone_Number    VARCHAR2 (11 CHAR) NOT NULL ,
    Email               VARCHAR2 (50 CHAR) ,
    First_Line_Address  VARCHAR2 (50 CHAR) NOT NULL ,
    Second_Line_Address VARCHAR2 (50 CHAR) ,
    PostCode            VARCHAR2 (11 CHAR) NOT NULL
  ) ;
ALTER TABLE Patients ADD CONSTRAINT Patients_PK PRIMARY KEY ( Patient_ID ) ;

INSERT INTO Patients VALUES(1, 'Daniel', 'Simkiss', '07599801670', '10072192@student.walsallcollege.ac.uk', '22 candy lane', NULL, 'WS13FG');


CREATE
  TABLE Room
  (
    Room_Number     INTEGER NOT NULL ,
    Room_Name       VARCHAR2 (20 CHAR) NOT NULL ,
    Room_Facilities VARCHAR2 (30 CHAR) NOT NULL ,
    Room_Furniture  VARCHAR2 (30 CHAR) NOT NULL ,
    Room_ID         NUMBER NOT NULL
  ) ;
ALTER TABLE Room ADD CONSTRAINT Room_PK PRIMARY KEY ( Room_ID ) ;


CREATE
  TABLE Staff
  (
    Staff_ID           INTEGER NOT NULL ,
    Role               VARCHAR2 (30 CHAR) NOT NULL ,
    First_Name         VARCHAR2 (30 CHAR) NOT NULL ,
    SurName            VARCHAR2 (30 CHAR) NOT NULL ,
    FirstLine_Address  VARCHAR2 (50 CHAR) NOT NULL ,
    SecondLine_Address VARCHAR2 (50 CHAR) ,
    PostCode           VARCHAR2 (11 CHAR) NOT NULL ,
    Contact_Number     VARCHAR2 (30 CHAR) NOT NULL ,
    Extension_Number   INTEGER NOT NULL ,
    Specialisms        VARCHAR2 (50 CHAR)
  ) ;
ALTER TABLE Staff ADD CONSTRAINT Staff_PK PRIMARY KEY ( Staff_ID ) ;


CREATE
  TABLE "X-Ray_Licence"
  (
    Licence_Number INTEGER NOT NULL ,
    Valid_From     DATE NOT NULL ,
    Valid_To       DATE NOT NULL ,
    Staff_Staff_ID INTEGER NOT NULL
  ) ;
ALTER TABLE "X-Ray_Licence" ADD CONSTRAINT "X-Ray_Licence_PK" PRIMARY KEY (
Licence_Number ) ;


ALTER TABLE Appointment ADD CONSTRAINT Appointment_Patients_FK FOREIGN KEY (
Patients_Patient_ID ) REFERENCES Patients ( Patient_ID ) ;

ALTER TABLE Appointment ADD CONSTRAINT Appointment_Room_FK FOREIGN KEY (
Room_Room_ID ) REFERENCES Room ( Room_ID ) ;

ALTER TABLE Appointment ADD CONSTRAINT Appointment_Staff_FK FOREIGN KEY (
Staff_Staff_ID ) REFERENCES Staff ( Staff_ID ) ;

ALTER TABLE Medical_Notes ADD CONSTRAINT Medical_Notes_Patients_FK FOREIGN KEY
( Patients_Patient_ID ) REFERENCES Patients ( Patient_ID ) ;

ALTER TABLE "X-Ray_Licence" ADD CONSTRAINT "X-Ray_Licence_Staff_FK" FOREIGN KEY
( Staff_Staff_ID ) REFERENCES Staff ( Staff_ID ) ;

CREATE OR REPLACE TRIGGER FKNTM_Appointment BEFORE
  UPDATE
    OF Room_Room_ID ON Appointment BEGIN raise_application_error(-20225,
    'Non Transferable FK constraint  on table Appointment is violated');
END;
/

CREATE OR REPLACE TRIGGER FKNTM_Medical_Notes BEFORE
  UPDATE
    OF Patients_Patient_ID ON Medical_Notes BEGIN raise_application_error(-
    20225,'Non Transferable FK constraint  on table Medical_Notes is violated')
    ;
END;
/

CREATE SEQUENCE Room_Room_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Room_Room_ID_TRG BEFORE
  INSERT
    ON Room FOR EACH ROW WHEN
    (
      NEW.Room_ID IS NULL
    )
    BEGIN :NEW.Room_ID := Room_Room_ID_SEQ.NEXTVAL;
END;
/


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             0
-- ALTER TABLE                             11
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
